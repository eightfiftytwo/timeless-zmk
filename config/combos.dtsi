/*                KEY POSITIONS

  ╭─────────────────────────╮ ╭─────────────────────────╮
  │ LT5 LT4 LT3 LT2 LT1 LT0 │ │ RT0 RT1 RT2 RT3 RT4 RT5 │
  │ LM5 LM4 LM3 LM2 LM1 LM0 │ │ RM0 RM1 RM2 RM3 RM4 RM5 │
  │ LB5 LB4 LB3 LB2 LB1 LB0 │ │ RB0 RB1 RB2 RB3 RB4 RB5 │
  ╰───────╮ LH3 LH2 LH1 LH0 │ │ RH0 RH1 RH2 RH3 ╭───────╯
          ╰─────────────────╯ ╰─────────────────╯ */

#define COMBO_TERM_FAST 18
#define COMBO_TERM_SLOW 30

#define COMBO_IDLE_FAST 150
#define COMBO_IDLE_SLOW 50

// TODO: consider reverse symbols

/* toggle colemak layer */
// ZMK_COMBO(cmkdh, &tog CMK,     LH1 RH1,     DEF CMK NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)

/* Arrow keys */
ZMK_COMBO(up,    &kp UP,       RT2 RM2,     DEF CMK NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(down,  &kp DOWN,     RM2 RB2,     DEF CMK NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(left,  &kp LEFT,     RM1 RM0,     DEF CMK NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(right, &hmr LC(LALT)RIGHT,  RM2 RM3,  DEF CMK NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)

/* Horizontal combos - left hand */
// Combos overlapping HRMs are set up as hold-taps themselves to allow for instantaneous
// chording of mods. Custom hold-tap instances can be bootstrapped on the go using the
// 8-argument version of ZMK_COMBO defined in base.keymap.
ZMK_COMBO(minus, &hml LS(LCTRL)MINUS, LM1 LM2,  DEF CMK NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
// ZMK_COMBO(dqt,   &hml LS(LGUI)DQT,    LM2 LM3,  DEF CMK NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(plus,  &hml LS(LGUI)PLUS,   LM2 LM3,  DEF CMK NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(tilde, &hml LA(LGUI)TILDE,  LM3 LM4,  DEF CMK NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)

ZMK_COMBO(equal, &kp EQUAL,    LM0 LM1,     DEF CMK NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(blsh,  &kp BSLH,     LB3 LB4,     DEF CMK NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(pipe,  &kp PIPE,     LB3 LB2,     DEF CMK NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
// ZMK_COMBO(plus,  &kp PLUS,     LB1 LB2,     DEF CMK NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(dqt,   &kp DQT,      LB1 LB2,     DEF CMK NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)

ZMK_COMBO(lpar,  &kp LPAR,     LT1 LT2,     DEF CMK NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(lbkt,  &kp LBKT,     LT2 LT3,     DEF CMK NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(lbrc,  &kp LBRC,     LT3 LT4,     DEF CMK NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(lt,    &kp LT,       LT1 LT3,     DEF CMK NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)

/* Horizontal combos - right hand */
ZMK_COMBO(cut,   &kp LC(X),    RB1 RB3,     DEF CMK NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
// ZMK_COMBO(copy,  &kp LC(INS),  RB2 RB3,     DEF CMK NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
// ZMK_COMBO(copy,  &kp LC(C),  RB2 RB3,     DEF CMK NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(copy_, &copy_cut,  RB2 RB3,     DEF CMK NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
// ZMK_COMBO(paste, &kp LS(INS),  RB1 RB2,     DEF CMK NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(paste, &kp LC(V),  RB1 RB2,     DEF CMK NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(undo,  &kp LC(Z),    RB3 RB4,     DEF CMK NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)

ZMK_COMBO(rpar,  &kp RPAR,     RT1 RT2,     DEF CMK NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(rbkt,  &kp RBKT,     RT2 RT3,     DEF CMK NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(rbrc,  &kp RBRC,     RT3 RT4,     DEF CMK NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(gt,    &kp GT,       RT1 RT3,     DEF CMK NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)

// Combos overlapping HRMs are set up as hold-taps themselves to allow for instantaneous
// chording of mods. Custom hold-tap instances can be bootstrapped on the go using the
// 8-argument version of ZMK_COMBO defined in base.keymap.
ZMK_COMBO(esc,   &hmr RS(LCTRL)ESC,   RM1 RM2,  DEF CMK NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(all,   &hmr LA(LGUI)LC(A),  RM3 RM4,  DEF CMK NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)

/* Vertical combos - left hand */
ZMK_COMBO(excl,  &kp EXCL,     LT4 LM4,     DEF CMK NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(at,    &kp AT,       LT3 LM3,     DEF CMK NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(hash,  &kp HASH,     LT2 LM2,     DEF CMK NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(dllr,  &kp DLLR,     LT1 LM1,     DEF CMK NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(prcnt, &kp PRCNT,    LT0 LM0,     DEF CMK NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)

ZMK_COMBO(caret, &kp CARET,    LM4 LB4,     DEF CMK NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(amps,  &kp AMPS,     LM3 LB3,     DEF CMK NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(star,  &kp STAR,     LM2 LB2,     DEF CMK NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(find,  &kp LC(F),    LM1 LB1,     DEF CMK NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)

/* Vertical combos - right hand */
ZMK_COMBO(sentc, &dot_spc,     RM3 RB3,     DEF CMK NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)

ZMK_COMBO(home,  &kp HOME,     RT1 RM1,     DEF CMK NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(end,   &kp END,      RT3 RM3,     DEF CMK NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(pg_up, &kp PG_UP,    RT0 RM0,     DEF CMK NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(pg_dn, &kp PG_DN,    RT4 RM4,     DEF CMK NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)